name: Kittygram CI/CD

on:
  push:
    branches: [ "main" ]


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install backend deps (incl. flake8)
        working-directory: backend
        run: |
          python -m pip install -r requirements.txt
          python -m pip install flake8==6.1.0

      - name: Lint backend
        working-directory: backend
        run: flake8 .

      - name: Test backend
        env:
            PYTHONPATH: backend
        run: |
            set +e
            pytest -q
            code=$?
            exit $code

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Test frontend
        working-directory: frontend
        run: npm test --if-present

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Backend
      - uses: docker/build-push-action@v6
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest

      # Frontend
      - uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest

      # Gateway
      - uses: docker/build-push-action@v6
        with:
          context: nginx
          file: nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ~/kittygram
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest
            docker compose down
            docker compose up -d
            docker compose exec -T backend python manage.py migrate --noinput
            docker compose exec -T backend python manage.py collectstatic --noinput

      - name: Telegram notify
        if: success()
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Kittygram: deploy OK"
